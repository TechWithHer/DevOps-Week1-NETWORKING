
---

# ✅ Real-World Network Troubleshooting Case Study using OSI & TCP/IP Layers

---

## 🏢 Use Case: Fixing Website Connectivity Issues for `ayushisingh.com`

---

### 🎯 Situation

**Client:** Ayushisingh.com is a portfolio website.
**Problem:** Users reported **intermittent website loading failures** and **slow response times**.
**Your Role:** Troubleshoot and resolve the issue layer-by-layer using OSI and TCP/IP models.

---

## 🧠 Troubleshooting Steps (With Real Commands)

---

### 🔌 Layer 1 — Physical (TCP/IP: Link Layer)

**Question:** Are the network interfaces physically connected and up?

✅ **Command**:

```bash
ip link show
```

✅ **Expected Output**:

```
2: enp0s3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 ...
```

* `UP` and `LOWER_UP` means cable or Wi-Fi is physically working.
* If `DOWN`, check cable or virtual adapter settings.

✅ **Action Taken**: Confirmed all physical interfaces were **UP and running** — no cable or NIC failure.

---

### 📡 Layer 2 — Data Link (MAC, ARP)

**Question:** Is the local LAN working? Are devices discoverable?

✅ **Command**:

```bash
arp -a
```

✅ **Expected Output**:

```
? (192.168.68.1) at 9c:53:22:66:c3:48 on en0 [ethernet]
```

✅ **Ping if entry is missing**:

```bash
ping 192.168.68.1
```

✅ **Action Taken**: Checked ARP table, verified MAC entries for the router and devices. No spoofing or errors found.

---

### 🌐 Layer 3 — Network (IP, Routing, Packet Flow)

**Question:** Is IP routing stable? Any packet loss?

✅ **Step 1: Check assigned IP**

```bash
ip a
```

✅ **Step 2: Ping gateway**

```bash
ip route
ping -c 3 <gateway_ip>
```

✅ **Step 3: Ping external IP (Google DNS)**

```bash
ping -c 3 8.8.8.8
```

✅ **Step 4: Trace the route**

```bash
traceroute fastshop.com
```

✅ **Action Taken**:

* Gateway ping worked ✅
* `ping 8.8.8.8` showed intermittent loss ❌
* `traceroute` showed high latency at one ISP hop ❌

🧠 **Diagnosis**: IP-level (Layer 3) issue with upstream ISP routing.

---

### 🚪 Layer 4 — Transport (TCP/UDP Connectivity)

**Question:** Are necessary ports open? Are connections stable?

✅ **Check TCP ports (80 and 443)**:

```bash
nc -zv fastshop.com 80
nc -zv fastshop.com 443
```

✅ **Check DNS with UDP (port 53)**:

```bash
dig google.com
```

*or:*

```bash
nslookup google.com
```

✅ **Action Taken**:

* Port 80 worked ✅
* Port 443 failed sometimes ❌
* DNS resolution was fine ✅

🧠 **Diagnosis**: Firewall or proxy issue blocking some TCP/443 traffic.

---

### 🌍 Layers 5-7 — Session, Presentation, Application

**Question:** Are secure connections and HTTP sessions working?

✅ **Check active TCP sessions**:

```bash
ss -t -a     # Linux
netstat -at  # macOS
```

✅ **SSL handshake check**:

```bash
openssl s_client -connect fastshop.com:443
```

✅ **Test HTTP response**:

```bash
curl -I https://fastshop.com
```

✅ **Action Taken**:

* SSL handshake timed out randomly ❌
* `curl` gave inconsistent `200 OK` ❌
* TCP sessions kept dropping ❌

🧠 **Diagnosis**:

* Unstable SSL termination (Layer 6 issue)
* Affected app-level HTTP responses (Layer 7)

---

## 🧩 Root Cause Summary

| OSI Layer | Problem Identified                          |
| --------- | ------------------------------------------- |
| Layer 3   | Packet loss due to ISP latency              |
| Layer 4   | Port 443 blocked intermittently by firewall |
| Layer 6   | SSL handshakes failing                      |
| Layer 7   | HTTP responses timing out                   |

---

## 🛠️ Resolution Steps

1. Collaborated with ISP → **Fixed packet loss** on route.
2. Updated firewall rules → **Allowed all TCP/443 connections**.
3. Restarted **SSL termination proxy** (e.g., Nginx or HAProxy).
4. Monitored using `curl`, `openssl`, `ping`, and `ss`.

---

## 📈 Final Outcome

* Site fully stabilized ✅
* SSL and HTTP requests working consistently ✅
* No more packet loss ✅
* Client praised the **structured, layered diagnosis** ✅

---

## 🧠 Quick Reference: TCP/IP Troubleshooting Summary

| TCP/IP Layer            | Tools / Fixes                        |
| ----------------------- | ------------------------------------ |
| **Link (Layer 1–2)**    | `ip link`, `arp`, `ping`             |
| **Internet (Layer 3)**  | `ip a`, `traceroute`, `ping 8.8.8.8` |
| **Transport (Layer 4)** | `nc`, `ss`, firewall ports           |
| **Application (L5–7)**  | `curl`, `openssl`, `netstat`, logs   |

---
